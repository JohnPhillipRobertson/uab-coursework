// Generated by view binder compiler. Do not edit!
package cs.mad.habittracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import cs.mad.habittracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHabitBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonEditTitle;

  @NonNull
  public final Button completeDecrementButton;

  @NonNull
  public final Button completeIncrementButton;

  @NonNull
  public final TextView completedCount;

  @NonNull
  public final TextView completedLabel;

  @NonNull
  public final RadioButton goalButtonDaily;

  @NonNull
  public final RadioButton goalButtonWeekly;

  @NonNull
  public final Button goalDecrementButton;

  @NonNull
  public final TextView goalEdit;

  @NonNull
  public final Button goalIncrementButton;

  @NonNull
  public final TextView goalLabel;

  @NonNull
  public final TextView habitSetTitle;

  @NonNull
  public final RadioGroup intervalRadioGroup;

  @NonNull
  public final RadioButton minutesButton;

  @NonNull
  public final TextView notesLabel;

  @NonNull
  public final EditText notesText;

  @NonNull
  public final Button reminderTimeEdit;

  @NonNull
  public final TextView reminderTimeEntered;

  @NonNull
  public final TextView remindersLabel;

  @NonNull
  public final RadioButton remindersOffButton;

  @NonNull
  public final RadioButton remindersOnButton;

  @NonNull
  public final RadioGroup remindersRadioGroup;

  @NonNull
  public final RadioButton secondsButton;

  @NonNull
  public final RadioGroup timerIntervalButtons;

  @NonNull
  public final TextView timerLabel;

  @NonNull
  public final Button timerLaunchButton;

  @NonNull
  public final EditText timerTimeEntered;

  @NonNull
  public final FrameLayout topFrame;

  private ActivityHabitBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonEditTitle,
      @NonNull Button completeDecrementButton, @NonNull Button completeIncrementButton,
      @NonNull TextView completedCount, @NonNull TextView completedLabel,
      @NonNull RadioButton goalButtonDaily, @NonNull RadioButton goalButtonWeekly,
      @NonNull Button goalDecrementButton, @NonNull TextView goalEdit,
      @NonNull Button goalIncrementButton, @NonNull TextView goalLabel,
      @NonNull TextView habitSetTitle, @NonNull RadioGroup intervalRadioGroup,
      @NonNull RadioButton minutesButton, @NonNull TextView notesLabel, @NonNull EditText notesText,
      @NonNull Button reminderTimeEdit, @NonNull TextView reminderTimeEntered,
      @NonNull TextView remindersLabel, @NonNull RadioButton remindersOffButton,
      @NonNull RadioButton remindersOnButton, @NonNull RadioGroup remindersRadioGroup,
      @NonNull RadioButton secondsButton, @NonNull RadioGroup timerIntervalButtons,
      @NonNull TextView timerLabel, @NonNull Button timerLaunchButton,
      @NonNull EditText timerTimeEntered, @NonNull FrameLayout topFrame) {
    this.rootView = rootView;
    this.buttonEditTitle = buttonEditTitle;
    this.completeDecrementButton = completeDecrementButton;
    this.completeIncrementButton = completeIncrementButton;
    this.completedCount = completedCount;
    this.completedLabel = completedLabel;
    this.goalButtonDaily = goalButtonDaily;
    this.goalButtonWeekly = goalButtonWeekly;
    this.goalDecrementButton = goalDecrementButton;
    this.goalEdit = goalEdit;
    this.goalIncrementButton = goalIncrementButton;
    this.goalLabel = goalLabel;
    this.habitSetTitle = habitSetTitle;
    this.intervalRadioGroup = intervalRadioGroup;
    this.minutesButton = minutesButton;
    this.notesLabel = notesLabel;
    this.notesText = notesText;
    this.reminderTimeEdit = reminderTimeEdit;
    this.reminderTimeEntered = reminderTimeEntered;
    this.remindersLabel = remindersLabel;
    this.remindersOffButton = remindersOffButton;
    this.remindersOnButton = remindersOnButton;
    this.remindersRadioGroup = remindersRadioGroup;
    this.secondsButton = secondsButton;
    this.timerIntervalButtons = timerIntervalButtons;
    this.timerLabel = timerLabel;
    this.timerLaunchButton = timerLaunchButton;
    this.timerTimeEntered = timerTimeEntered;
    this.topFrame = topFrame;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_habit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHabitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_edit_title;
      Button buttonEditTitle = rootView.findViewById(id);
      if (buttonEditTitle == null) {
        break missingId;
      }

      id = R.id.complete_decrement_button;
      Button completeDecrementButton = rootView.findViewById(id);
      if (completeDecrementButton == null) {
        break missingId;
      }

      id = R.id.complete_increment_button;
      Button completeIncrementButton = rootView.findViewById(id);
      if (completeIncrementButton == null) {
        break missingId;
      }

      id = R.id.completed_count;
      TextView completedCount = rootView.findViewById(id);
      if (completedCount == null) {
        break missingId;
      }

      id = R.id.completed_label;
      TextView completedLabel = rootView.findViewById(id);
      if (completedLabel == null) {
        break missingId;
      }

      id = R.id.goal_button_daily;
      RadioButton goalButtonDaily = rootView.findViewById(id);
      if (goalButtonDaily == null) {
        break missingId;
      }

      id = R.id.goal_button_weekly;
      RadioButton goalButtonWeekly = rootView.findViewById(id);
      if (goalButtonWeekly == null) {
        break missingId;
      }

      id = R.id.goal_decrement_button;
      Button goalDecrementButton = rootView.findViewById(id);
      if (goalDecrementButton == null) {
        break missingId;
      }

      id = R.id.goal_edit;
      TextView goalEdit = rootView.findViewById(id);
      if (goalEdit == null) {
        break missingId;
      }

      id = R.id.goal_increment_button;
      Button goalIncrementButton = rootView.findViewById(id);
      if (goalIncrementButton == null) {
        break missingId;
      }

      id = R.id.goal_label;
      TextView goalLabel = rootView.findViewById(id);
      if (goalLabel == null) {
        break missingId;
      }

      id = R.id.habit_set_title;
      TextView habitSetTitle = rootView.findViewById(id);
      if (habitSetTitle == null) {
        break missingId;
      }

      id = R.id.interval_radio_group;
      RadioGroup intervalRadioGroup = rootView.findViewById(id);
      if (intervalRadioGroup == null) {
        break missingId;
      }

      id = R.id.minutes_button;
      RadioButton minutesButton = rootView.findViewById(id);
      if (minutesButton == null) {
        break missingId;
      }

      id = R.id.notes_label;
      TextView notesLabel = rootView.findViewById(id);
      if (notesLabel == null) {
        break missingId;
      }

      id = R.id.notes_text;
      EditText notesText = rootView.findViewById(id);
      if (notesText == null) {
        break missingId;
      }

      id = R.id.reminder_time_edit;
      Button reminderTimeEdit = rootView.findViewById(id);
      if (reminderTimeEdit == null) {
        break missingId;
      }

      id = R.id.reminder_time_entered;
      TextView reminderTimeEntered = rootView.findViewById(id);
      if (reminderTimeEntered == null) {
        break missingId;
      }

      id = R.id.reminders_label;
      TextView remindersLabel = rootView.findViewById(id);
      if (remindersLabel == null) {
        break missingId;
      }

      id = R.id.reminders_off_button;
      RadioButton remindersOffButton = rootView.findViewById(id);
      if (remindersOffButton == null) {
        break missingId;
      }

      id = R.id.reminders_on_button;
      RadioButton remindersOnButton = rootView.findViewById(id);
      if (remindersOnButton == null) {
        break missingId;
      }

      id = R.id.reminders_radio_group;
      RadioGroup remindersRadioGroup = rootView.findViewById(id);
      if (remindersRadioGroup == null) {
        break missingId;
      }

      id = R.id.seconds_button;
      RadioButton secondsButton = rootView.findViewById(id);
      if (secondsButton == null) {
        break missingId;
      }

      id = R.id.timer_interval_buttons;
      RadioGroup timerIntervalButtons = rootView.findViewById(id);
      if (timerIntervalButtons == null) {
        break missingId;
      }

      id = R.id.timer_label;
      TextView timerLabel = rootView.findViewById(id);
      if (timerLabel == null) {
        break missingId;
      }

      id = R.id.timer_launch_button;
      Button timerLaunchButton = rootView.findViewById(id);
      if (timerLaunchButton == null) {
        break missingId;
      }

      id = R.id.timer_time_entered;
      EditText timerTimeEntered = rootView.findViewById(id);
      if (timerTimeEntered == null) {
        break missingId;
      }

      id = R.id.top_frame;
      FrameLayout topFrame = rootView.findViewById(id);
      if (topFrame == null) {
        break missingId;
      }

      return new ActivityHabitBinding((ConstraintLayout) rootView, buttonEditTitle,
          completeDecrementButton, completeIncrementButton, completedCount, completedLabel,
          goalButtonDaily, goalButtonWeekly, goalDecrementButton, goalEdit, goalIncrementButton,
          goalLabel, habitSetTitle, intervalRadioGroup, minutesButton, notesLabel, notesText,
          reminderTimeEdit, reminderTimeEntered, remindersLabel, remindersOffButton,
          remindersOnButton, remindersRadioGroup, secondsButton, timerIntervalButtons, timerLabel,
          timerLaunchButton, timerTimeEntered, topFrame);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
