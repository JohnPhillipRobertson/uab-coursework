// Generated by view binder compiler. Do not edit!
package cs.mad.habittracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import cs.mad.habittracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addHabitButton;

  @NonNull
  public final LinearLayout buttonBar;

  @NonNull
  public final RecyclerView habitList;

  @NonNull
  public final MaterialButton statsButton;

  private ActivityDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addHabitButton, @NonNull LinearLayout buttonBar,
      @NonNull RecyclerView habitList, @NonNull MaterialButton statsButton) {
    this.rootView = rootView;
    this.addHabitButton = addHabitButton;
    this.buttonBar = buttonBar;
    this.habitList = habitList;
    this.statsButton = statsButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_habit_button;
      MaterialButton addHabitButton = rootView.findViewById(id);
      if (addHabitButton == null) {
        break missingId;
      }

      id = R.id.button_bar;
      LinearLayout buttonBar = rootView.findViewById(id);
      if (buttonBar == null) {
        break missingId;
      }

      id = R.id.habit_list;
      RecyclerView habitList = rootView.findViewById(id);
      if (habitList == null) {
        break missingId;
      }

      id = R.id.stats_button;
      MaterialButton statsButton = rootView.findViewById(id);
      if (statsButton == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((ConstraintLayout) rootView, addHabitButton, buttonBar,
          habitList, statsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
